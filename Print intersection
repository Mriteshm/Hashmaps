import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class Runner {

    static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    
    public static int[] takeInput() throws IOException {
        int size = Integer.parseInt(br.readLine().trim());
        int[] input = new int[size];

        if (size == 0) {
            return input;
        }
        
        String[] strNums; 
        strNums = br.readLine().split("\\s");
        

        for (int i = 0; i < size; ++i) {
            input[i] = Integer.parseInt(strNums[i]);
        }

        return input;
    }

    public static void printArray(int[] arr) {
        for (int element : arr) {
            System.out.print(element + " ");
        }

        System.out.println();
    }

    public static void main(String[] args) throws NumberFormatException, IOException {
        int t = Integer.parseInt(br.readLine().trim());

        while(t > 0) {
            int[] arr1 = takeInput();
            int[] arr2 = takeInput();
            intersection(arr1, arr2);
            System.out.println();

            t -= 1;
        }
    }

public class Solution {

	public static void intersection(int[] arr1, int[] arr2) {
		HashMap<Integer, Integer> hmap = new HashMap<>();
		// Your code goes here
		for (int i = 0; i < arr1.length; i++) {
			if (hmap.containsKey(arr1[i])) {
				int value = hmap.get(arr1[i]);
				hmap.put(arr1[i], value + 1);
			} else {
				hmap.put(arr1[i], 1);
			}
		}
		for (int i = 0; i < arr2.length; i++) {
			Arrays.sort(arr2);
			if (hmap.containsKey(arr2[i])) {
				int freq = hmap.get(arr2[i]);
				if (freq > 0) {
					System.out.print(arr2[i] + " ");
					hmap.put(arr2[i], freq - 1);
				}
			}
		}
	}
