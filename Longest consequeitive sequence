import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
public class Runner {

    static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    
    public static int[] takeInput() throws IOException {
        int size = Integer.parseInt(br.readLine().trim());
        int[] input = new int[size];

        if (size == 0) {
            return input;
        }
        
		String[] strNums;
		strNums = br.readLine().split("\\s");
		
        for (int i = 0; i < size; ++i) {
            input[i] = Integer.parseInt(strNums[i]);
        }

        return input;
    }

    public static void printArray(ArrayList<Integer> arr) {
        for (int element : arr) {
            System.out.print(element + " ");
        }

        System.out.println();
    }

    public static void main(String[] args) throws NumberFormatException, IOException {


        int[] arr = takeInput();
        ArrayList<Integer> ans = longestConsecutiveIncreasingSequence(arr);
        printArray(ans);

    }
	public static ArrayList<Integer> longestConsecutiveIncreasingSequence(int[] arr)
	 {
		 ArrayList<Integer>input=new ArrayList<>();
		 int max=0;
		 int maxlength=0;
		 HashMap<Integer,Boolean>map=new HashMap<>();
		 for(int i=0;i<arr.length;i++)
		 {
			 map.put(arr[i],true);
		 }
		 for(int i=0;i<arr.length;i++)
		 { 
			 int a=arr[i];
			 if(map.containsKey(a-1))
			 {
				 map.put(arr[i],false);
			 }
		 }
		 for(int i=0;i<arr.length;i++)
		 {
			 if(map.get(arr[i])==true)
			 {
				 int start=arr[i];
				 int length=1;
				 while(map.containsKey(start+length))
				 {
					 length++;
				 }
				 if(length>maxlength)
				 {
					 max=start;
					 maxlength=length;

				 }
			 }
		 }
			 input.add(max);
		  input.add(max+maxlength-1);
		 return input;
		
    }
}
