import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class Main {

	static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));;
	static StringTokenizer st;

	public static void main(String[] args) throws NumberFormatException, IOException {
		st = new StringTokenizer(br.readLine());
		int n = Integer.parseInt(st.nextToken());
		int arr[] = new int[n];
		st = new StringTokenizer(br.readLine());
		for (int i = 0; i < n; i++) {
			arr[i] = Integer.parseInt(st.nextToken());
		}
		System.out.println(lengthOfLongestSubsetWithZeroSum(arr));
	}
	public static int lengthOfLongestSubsetWithZeroSum(int arr[]) 
	{
       HashMap<Integer,Integer>map=new HashMap<>();
	   int size=0;
	   for(int i=0;i<arr.length;i++)
	   {
		  int sum=arr[i],length;
		   for(int p=i+1;p<arr.length;p++)
		   {
			   sum=sum+arr[p];
             length=p-i;
			   if(sum==0)
			   {
				   if(size<length)
				   {
					   size=length;
				   }
			   }
		   }
          
	   }
	   return size+1;		
	}
}
